#include <stdio.h>
#include <stdlib.h>
#include "carcassonne_interface.h"
#include <time.h>

char const * get_player_name()
{
  char const * name = "PLAYER1";
  return name;
}

struct move play(enum card_id card,struct move const previous_moves[], size_t n_moves){
  int valu = rand();
  struct move next_move;
  if ((int)n_moves == 0) {
    next_move.player = 0;
  }
  else {
    next_move.player = previous_moves[n_moves-1].player + 1;
  }
  next_move.check = VALID;
  next_move.card = card;
  next_move.onto.x = valu%10;
  next_move.onto.y = (valu+1)%10;
  next_move.dir = valu%4;
  next_move.place = valu%15;
  printf("je joue une carte face caché\n");
  return next_move;
}


void initialize(unsigned int id,
		unsigned int n_players)
{
  if(id < n_players ){
    printf("This player\'s id is : %d\n",id);
  }
  //id = id;
  //n_players = n_players;
  /*  player_list[id]->num = id;
  player_list[id]->point = 0;
  player_list[id]->name = get_player_name();*/
  //printf("initialize check\n");
}

void finalize()
{
  printf("We move to the next player , this one has finished it's turn . \n");
  //printf("Le jeu est fini, vous avez perdu!!!\n");
  //free(player_list);
}

/*
int main()
{
  initialize(0,0);
  struct move previous_moves[9];
  struct move next = play(CARD_MONASTERY_ROAD,previous_moves,0);
  printf("check\t=\t%d\n", next.check);
  printf("player\t=\t%d\n", next.player);
  printf("card\t=\t%d\n", next.card);
  printf("onto\t=\t(%d,%d)\n", next.onto.x, next.onto.y);
  printf("dir\t=\t%d\n", next.dir);
  printf("place\t=\t%d\n", next.place);
  finalize();
  return 0;
}
*/

/*
-player_list est une variable globale qui représente la liste de l'ensemble des 
joueurs
-cette liste doit être, à fortiori, localisée dans le fichier server.c
-faut trouver quoi mettre dedans
-mettre de préference "player_list" sous forme de pointeur
*/
